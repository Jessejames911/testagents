--- # 数据源配置
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/agents-builder?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&autoReconnect=true&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true
    username: root
    password: root
    hikari:
      # 配置获取连接等待超时的时间
      connectionTimeout: 30000
      # 校验超时时间
      validationTimeout: 5000
      # 空闲连接存活最大时间，默认10分钟
      idleTimeout: 600000
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
      maxLifetime: 1800000
      # 连接测试query（配置检测连接是否有效）
      connectionTestQuery: SELECT 1
      # 多久检查一次连接的活性
      keepaliveTime: 30000
      # 最大连接池数量
      maximum-pool-size: 20
      # 最小空闲线程数量
      minimum-idle: 10
  ai:
    dashscope:
      chat:
        enabled: false
      embedding:
        enabled: false
      api-key: your api key
    vectorstore:
      milvus:
        client:
          host: ${milvus.host}
          port: ${milvus.port}
          rpc-deadline-ms: 10000
        #          uri: ${milvus.uri}
        embedding-dimension: 1024
        collection-name: ${milvus.collection-name}
        database-name: ${milvus.db-name}
#        indexType: IVF_FLAT
        metricType: COSINE
        initialize-schema: true

# https://dashscope.aliyuncs.com/compatible-mode


milvus:
  db-name: agents_builder
  collection-name: text_default
  host: localhost
  port: 19530
  uri: https://${milvus.host}:${milvus.port}
  packages:
  open-log: true

rocketmq:
  # 接收消息
  name-server: localhost:9876
  producer:
    group: ai-agent-group
    # 其他的配置 发送超时时长
    send-message-timeout: 3000
    # 消息 Body 超过多大开始压缩
    compress-message-body-threshold: 4096
    # 限制的消息大小
    max-message-size: 4194304
    # 开启内部消息重试
    retry-next-server: true
    # 失败重试次数
    retry-times-when-send-async-failed: 2


--- # redis 单机配置(单机与集群只能开启一个另一个需要注释掉)
spring.data:
  redis:
    # 地址
    host: localhost
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 0
    # 密码(如没有密码请注释掉)
    password: root
    # 连接超时时间
    timeout: 30s
    # 是否开启ssl
    ssl.enabled: false

redisson:
  # redis key前缀
  keyPrefix:
  # 线程池数量
  threads: 4
  # Netty线程池数量
  nettyThreads: 8
  # 单节点配置
  singleServerConfig:
    # 客户端名称
    clientName: ${agent.name}
    # 最小空闲连接数
    connectionMinimumIdleSize: 8
    # 连接池大小
    connectionPoolSize: 32
    # 连接空闲超时，单位：毫秒
    idleConnectionTimeout: 10000
    # 命令等待超时，单位：毫秒
    timeout: 3000
    # 发布和订阅连接池大小
    subscriptionConnectionPoolSize: 50

system-config-resource:
  base-path: D:\IDEAWorkSpace\bisuiness\AgentsBuilder\data
  jython-path: D:\jython2.7.3
  embed-js-path: ${system-config-resource.base-path}\embed.js
  default-workflow-js-path: ${system-config-resource.base-path}\default_workflow.json
  code-email-template-path: ${system-config-resource.base-path}\email_template.html
  qa-excel-template-path: ${system-config-resource.base-path}\qa_template.xlsx
  qa-csv-template-path: ${system-config-resource.base-path}\qa_template.csv
  table-excel-template-path: ${system-config-resource.base-path}\table_template.xlsx
  table-csv-template-path: ${system-config-resource.base-path}\table_template.csv
oss:
  enabled: true
  access-key: minioadmin
  secret-key: minioadmin
  # 云服务厂商必填
  endpoint: 10.1.249.198:9000
  bucket-name: ai-app-builder
  prefix:
  # minio必填
  domain:
  region:
  is-https: N
  access-policy: 2

--- # mail 邮件发送
#mail:
#  enabled: false
#  host: smtp.163.com
#  port: 465
#  # 是否需要用户名密码验证
#  auth: true
#  # 发送方，遵循RFC-822标准
#  from: xxx@163.com
#  # 用户名（注意：如果使用foxmail邮箱，此处user为qq号）
#  user: xxx@163.com
#  # 密码（注意，某些邮箱需要为SMTP服务单独设置密码，详情查看相关帮助）
#  pass: xxxxxxxxxx
#  # 使用 STARTTLS安全连接，STARTTLS是对纯文本通信协议的扩展。
#  starttlsEnable: true
#  # 使用SSL安全连接
#  sslEnable: true
#  # SMTP超时时长，单位毫秒，缺省值不超时
#  timeout: 0
#  # Socket连接超时值，单位毫秒，缺省值不超时
#  connectionTimeout: 0

